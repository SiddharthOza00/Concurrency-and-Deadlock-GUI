package deadlock;


import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class BankersAlgo extends javax.swing.JFrame {

    /**
     * Creates new form BankersAlgo
     */
    public BankersAlgo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jFrame1 = new javax.swing.JFrame();
        jButton2 = new javax.swing.JButton();
        npi1 = new javax.swing.JTextField();
        nri1 = new javax.swing.JTextField();
        Input1 = new javax.swing.JButton();
        AlocationMatrix1 = new javax.swing.JLabel();
        MaximumMatrix1 = new javax.swing.JLabel();
        AvailableMatrix1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        AloMatrix1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        MaxMatrix1 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        AvaiMatrix1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        npi = new javax.swing.JTextField();
        nri = new javax.swing.JTextField();
        Input = new javax.swing.JButton();
        AlocationMatrix = new javax.swing.JLabel();
        MaximumMatrix = new javax.swing.JLabel();
        AvailableMatrix = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AloMatrix = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        MaxMatrix = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        AvaiMatrix = new javax.swing.JTable();
        Execute = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        npi1.setText("np");
        npi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npi1ActionPerformed(evt);
            }
        });

        nri1.setText("nr");
        nri1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nri1ActionPerformed(evt);
            }
        });

        Input1.setText("Input");
        Input1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Input1ActionPerformed(evt);
            }
        });

        AlocationMatrix1.setText("Alocation Matrix");

        MaximumMatrix1.setText("Maximum Matrix");

        AvailableMatrix1.setText("Available Matrix");

        AloMatrix1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(AloMatrix1);

        MaxMatrix1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(MaxMatrix1);

        AvaiMatrix1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(AvaiMatrix1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(npi1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nri1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(Input1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6)
                            .addComponent(AvailableMatrix1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AlocationMatrix1)
                            .addComponent(MaximumMatrix1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npi1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nri1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Input1))
                .addGap(27, 27, 27)
                .addComponent(AlocationMatrix1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(MaximumMatrix1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AvailableMatrix1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        npi.setText("np");
        npi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                npiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                npiFocusLost(evt);
            }
        });
        npi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npiActionPerformed(evt);
            }
        });

        nri.setText("nr");
        nri.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nriFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nriFocusLost(evt);
            }
        });
        nri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nriActionPerformed(evt);
            }
        });

        Input.setText("Input");
        Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputActionPerformed(evt);
            }
        });

        AlocationMatrix.setText("Alocation Matrix");

        MaximumMatrix.setText("Maximum Matrix");

        AvailableMatrix.setText("Available Matrix");

        AloMatrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(AloMatrix);

        MaxMatrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(MaxMatrix);

        AvaiMatrix.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(AvaiMatrix);

        Execute.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Execute.setText("Execute");
        Execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setRows(5);
        jScrollPane8.setViewportView(output);
        output.setVisible(false);
        output.setEditable(false);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField1.setText("Bankers Algorithm");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("OUTPUT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(MaximumMatrix, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(AvailableMatrix, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(AlocationMatrix, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(npi, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nri, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Execute, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(npi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Input))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Execute, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AlocationMatrix)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane8)
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(MaximumMatrix)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(AvailableMatrix)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       mainpage jfrm2= new mainpage();
        //jfrm2.setTitle("Bankers Algorithm");
        jfrm2.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(mainpage.EXIT_ON_CLOSE);
        this.dispose(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nriActionPerformed
        // TODO add your handling code here:
        nri.setText("");
    }//GEN-LAST:event_nriActionPerformed

    private void InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputActionPerformed
        // TODO add your handling code here:
        int nr = Integer.parseInt(nri.getText());
        int np = Integer.parseInt(npi.getText());
        String[] row = new String[nr];
        DefaultTableModel model = (DefaultTableModel) AloMatrix.getModel();
        DefaultTableModel model1 = (DefaultTableModel) MaxMatrix.getModel();
        DefaultTableModel model2 = (DefaultTableModel) AvaiMatrix.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        model1.setRowCount(0);
        model1.setColumnCount(0);
        model2.setRowCount(0);
        model2.setColumnCount(0);
        for(int i=0;i<nr;i++){
            model.addColumn(i+1);
            model1.addColumn(i+1);
        }
        for(int i=0;i<nr;i++){
            row[i] = "";
        }
        for(int i=0;i<np;i++){
            model.addRow(row);
            model1.addRow(row);
        }
        for(int i=0;i<nr;i++){
            model2.addColumn(i+1);
        }
        String[] row1 = new String[nr];
        model2.addRow(row1);
    }//GEN-LAST:event_InputActionPerformed

    private void npiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_npiActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void npi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_npi1ActionPerformed

    private void nri1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nri1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nri1ActionPerformed

    private void Input1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Input1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Input1ActionPerformed

    private void ExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteActionPerformed
        // TODO add your handling code here:
        output.setVisible(true);
        output.setEditable(true);
        DefaultTableModel alot = (DefaultTableModel) AloMatrix.getModel();
        DefaultTableModel maxt = (DefaultTableModel) MaxMatrix.getModel();
        DefaultTableModel availt = (DefaultTableModel) AvaiMatrix.getModel();
        int c = alot.getColumnCount();
        int r = alot.getRowCount();
        int[][] avail = new int[1][c];
        int[][] allocate = new int[r][c];
        int[][] max = new int[r][c];
        int[][] need = new int[r][c];
        boolean flag = true;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(flag){
                    avail[0][j] = Integer.valueOf((String) availt.getValueAt(0,j));
                }
                allocate[i][j] = Integer.valueOf((String) alot.getValueAt(i,j));
                max[i][j] = Integer.valueOf((String) maxt.getValueAt(i,j));
            }
            flag = false;
        }
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) { // calculating need matrix
                need[i][j] = max[i][j] - allocate[i][j];
            }
        }
        final boolean done[] = new boolean[r];
        int j = 0;
        output.setText("");
        while (j < r) { // loop until all process allocated
            boolean allocated = false;
            for (int i = 0; i < r; i++)
                if (!done[i] && check(i,c,avail,need)) { // trying to allocate
                    for (int k = 0; k < c; k++)
                        avail[0][k] = avail[0][k] - need[i][k] + max[i][k];
                    String o1 = "\nAllocated process : " + Integer.toString(i); 
                    System.out.println(o1);
                    output.append(o1);
                    allocated = done[i] = true;
                    j++;
                }
            if (!allocated)
                break; // if no allocation
        }
        if (j == r){ // if all processes are allocated
            String o2 = "\n\nSafely allocated!";
            System.out.print(o2);
            output.append(o2);
            
        }
        else{
            String o2 = "\n\nAll proceess can't be allocated safely!";
            System.out.print(o2);
            output.append(o2);
        }
        output.setEditable(false);
    }//GEN-LAST:event_ExecuteActionPerformed

    private void nriFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nriFocusGained
        // TODO add your handling code here:
        nri.setText("");
    }//GEN-LAST:event_nriFocusGained

    private void npiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_npiFocusGained
        // TODO add your handling code here:
        npi.setText("");
    }//GEN-LAST:event_npiFocusGained

    private void npiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_npiFocusLost
        // TODO add your handling code here:
        if(npi.getText().equals("")){
            npi.setText("np");
        }
    }//GEN-LAST:event_npiFocusLost

    private void nriFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nriFocusLost
        // TODO add your handling code here:
        if(nri.getText().equals("")){
            nri.setText("nr");
        }
    }//GEN-LAST:event_nriFocusLost

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    private boolean check(final int i,int c,int[][] avail,int[][] need) {
        // checking if all resources for it^(h) process can be allocated
        for (int j = 0; j < c; j++) {
            if (avail[0][j] < need[i][j]) {
                return false;
            }
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankersAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankersAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankersAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankersAlgo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankersAlgo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AloMatrix;
    private javax.swing.JTable AloMatrix1;
    private javax.swing.JLabel AlocationMatrix;
    private javax.swing.JLabel AlocationMatrix1;
    private javax.swing.JTable AvaiMatrix;
    private javax.swing.JTable AvaiMatrix1;
    private javax.swing.JLabel AvailableMatrix;
    private javax.swing.JLabel AvailableMatrix1;
    private javax.swing.JButton Execute;
    private javax.swing.JButton Input;
    private javax.swing.JButton Input1;
    private javax.swing.JTable MaxMatrix;
    private javax.swing.JTable MaxMatrix1;
    private javax.swing.JLabel MaximumMatrix;
    private javax.swing.JLabel MaximumMatrix1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField npi;
    private javax.swing.JTextField npi1;
    private javax.swing.JTextField nri;
    private javax.swing.JTextField nri1;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
