/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deadlock;



import java.util.Scanner;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Dell
 */

public class Semaph extends javax.swing.JFrame {

    /**
     * Creates new form Semaphore
     */
    public Semaph() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        Aname = new javax.swing.JTextField();
        Bname = new javax.swing.JTextField();
        first = new javax.swing.JTextField();
        second = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Execute = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        out = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField1.setText("Semaphore");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        Aname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnameActionPerformed(evt);
            }
        });

        Bname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnameActionPerformed(evt);
            }
        });

        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        second.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter First Process Name");

        jLabel2.setText("Enter Second Process Name");

        jLabel3.setText("Enter First Process Count");

        jLabel4.setText("Enter Second Process Count");

        Execute.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Execute.setText("Execute");
        Execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecuteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("OUTPUT");

        out.setColumns(20);
        out.setRows(5);
        jScrollPane1.setViewportView(out);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Aname, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(139, 139, 139)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Bname)
                                                    .addComponent(second))
                                                .addGap(76, 76, 76)))
                                        .addGap(22, 22, 22))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(first)
                                .addGap(318, 318, 318))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(Execute, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel5)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Bname)
                            .addComponent(Aname))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(Execute)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTextField1.setEditable(false);
        first.setVisible(false);
        second.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents
Scanner sc =new Scanner(System.in);
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 mainpage jfrm2= new mainpage();
        //jfrm2.setTitle("Bankers Algorithm");
        jfrm2.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(mainpage.EXIT_ON_CLOSE);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void AnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnameActionPerformed
           
        String s1 =sc.nextLine();        // TODO add your handling code here:
    }//GEN-LAST:event_AnameActionPerformed

    private void secondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondActionPerformed
        int n = sc.nextInt();// TODO add your handling code here:
    }//GEN-LAST:event_secondActionPerformed

    private void ExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecuteActionPerformed
        try {
            Semaphore sem = new Semaphore(1);
//            Scanner sc =new Scanner(System.in);
            
            
            String s=Aname.getText();
            
            String c=Bname.getText();
            
            // creating two threads with name A and B
            // Note that thread A will increment the count
            // and thread B will decrement the count
            MyThread mt1 = new MyThread(sem, s);
            MyThread mt2 = new MyThread(sem, c);
//            flag = true;
            // stating threads A and B
//            System.out.println("before start");
            mt1.start();
            mt2.start();
//            System.out.println("after start");
            // waiting for threads A and B
//            System.out.println("before join");
            mt1.join();
            mt2.join();
            try {
            TimeUnit.SECONDS.sleep(1);
        } catch (InterruptedException ex) {
            Logger.getLogger(Peterson.class.getName()).log(Level.SEVERE, null, ex);
        }
            String output = "\n"+mt1.out();
            output = output +"\n"+ mt2.out();
//            System.out.println("after join");
            // count will always remain 0 after
            // both threads will complete their execution
            output = output +"\n"+"count: " + Shared.count;
            System.out.println("count: " + Shared.count);
            out.setText(output);
            out.setEditable(false);
        } catch (InterruptedException ex) {
            Logger.getLogger(Semaph.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ExecuteActionPerformed

    private void BnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnameActionPerformed
       String s2 =sc.nextLine();  // TODO add your handling code here:
    }//GEN-LAST:event_BnameActionPerformed

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
          int n = sc.nextInt();        // TODO add your handling code here:
    }//GEN-LAST:event_firstActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Semaph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Semaph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Semaph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Semaph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Semaph().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Aname;
    private javax.swing.JTextField Bname;
    private javax.swing.JButton Execute;
    private javax.swing.JTextField first;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea out;
    private javax.swing.JTextField second;
    // End of variables declaration//GEN-END:variables
}

class Shared
{
 static int count = 0;
}
interface input{
    int input();
}
class MyThread extends Thread 
{
 String o = "";
 Semaphore sem;
 String threadName;
 public MyThread(Semaphore sem, String threadName)
 {
     super(threadName);
     this.sem = sem;
     this.threadName = threadName;
 }
// public int input(){
//     if(flag){
//         int i = first.getText();
//         flag=false;
//     }
//     else{
//         int i= second.getText();
//     }
//     return 1;
// }
 @Override
 public void run() {
	 
      @SuppressWarnings("resource")
//	Scanner sc = new Scanner(System.in);
     // run by thread A
      
     int n = 3;
      
     if(this.getName().equals(""))
     {  
         o = o+"\n"+"Starting" + threadName;
         System.out.println("Starting " +  threadName);
         try
         {
             // First, get a permit.
             o = o + "\n"+threadName + " is waiting for a permit.";
             System.out.println(threadName + " is waiting for a permit.");

             // acquiring the lock
             sem.acquire();
             o = o + "\n"+ threadName + " gets a permit.";
             System.out.println(threadName + " gets a permit.");

             // Now, accessing the shared resource.
             // other waiting threads will wait, until this
             // thread release the lock

             for(int i=0; i < n; i++)
             {
                 Shared.count--;
                 o = o+"\n"+threadName + ":" + Shared.count;
                 System.out.println(threadName + ":" + Shared.count);

                 // Now, allowing a context switch -- if possible.
                 // for thread B to execute
                 Thread.sleep(100);
             }
         } catch (InterruptedException exc) {
                 System.out.println(exc);
             }

             // Release the permit.
             o = o +"\n"+threadName + " releases the permit.";
             System.out.println(threadName + " releases the permit.");
             sem.release();
     }
     
     // run by thread B
     else
     {
         o = o +"\n"+"Starting " + threadName;
         System.out.println("Starting " + threadName);
         try
         {
             // First, get a permit.
             o = o+"\n"+threadName + " is waiting for a permit.";
             System.out.println(threadName + " is waiting for a permit.");

             // acquiring the lock
             sem.acquire();
             o = o +"\n" +threadName + " gets a permit.";
             System.out.println(threadName + " gets a permit.");

             // Now, accessing the shared resource.
             // other waiting threads will wait, until this
             // thread release the lock
             for(int i=0; i < n; i++)
             {
                 Shared.count--;
                 o = o +"\n" +threadName + ":" + Shared.count;
                 System.out.println(threadName + ":" + Shared.count);

                 // Now, allowing a context switch -- if possible.
                 // for thread A to execute
                 Thread.sleep(10);
             }
         } catch (InterruptedException exc) {
                 System.out.println(exc);
             }
             // Release the permit.
             o = o+"\n"+threadName + " releases the permit.";
             System.out.println(threadName + " releases the permit.");
             sem.release();
     }
 }
 public String out(){
     return o;
 }
}